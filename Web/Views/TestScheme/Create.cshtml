@model Web.Models.TestSchemeEditModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(mode => Model.TestScheme.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestScheme.Name, new { htmlAttribute = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TestScheme.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentGroups, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedStudentGroups,
                new MultiSelectList(Model.StudentGroups, "Id", "Name"),
                new { style = "display:block;" })
                <i>Hold ctrl for selecting more items.</i>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Topics, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedTopics,
                new MultiSelectList(Model.Topics, "Id", "Name"),
                new { style = "display:block;" }) 
                <i>Hold ctrl for selecting more items.</i>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TestScheme.OpenTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TestScheme.OpenTime, new { htmlAttribute = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TestScheme.OpenTime, "", new { @class = "text-danger" })
                    <i>Use format dd/mm/yyyy.</i>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TestScheme.CloseTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TestScheme.CloseTime, new { htmlAttribute = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TestScheme.CloseTime, "", new { @class = "text-danger" })
                    <i>Use format dd/mm/yyyy.</i>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TestScheme.QuestionsAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TestScheme.QuestionsAmount, new { htmlAttribute = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TestScheme.QuestionsAmount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                 <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
